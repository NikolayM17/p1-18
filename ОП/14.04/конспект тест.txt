Браженец Владислав 14.04
∙ Язык программирования C++ создан на основе языка C.
∙ Язык программирования C разработан в начале 1973 года в
компании Bell Labs Кеном Томпсоном и Деннисом Ритчи.
∙ Язык C был создан для использования в операционной
системе UNIX.
Особенности C
∙ Эффективность.
∙ Стандартизированность
∙ Относительная простота.
Создание C++
∙ Разрабатывается с начала 1980-х годов
∙ Создатель — сотрудник Bell Labs Бьёрн Страуструп.
∙ Ранние версии языка назывались “C with classes”
∙ Первый компилятор cfront, перерабатывающий исходный
код “C с классами” в исходный код на C.
Развитие C++
∙ К 1983 году в язык было добавлено много новых
возможностей (виртуальные функции, перегрузка функций
и операторов, ссылки, константы, . . . )
∙ Получившийся язык перестал быть просто дополненной
версией классического C и был переименован из “C с
классами” в C++.
∙ Имя языка, получившееся в итоге, происходит от
оператора унарного постфиксного инкремента C ’++’
(увеличение значения переменной на единицу).
∙ Язык также не был назван D, поскольку “является
расширением C и не пытается устранять проблемы путём
удаления элементов C”.
Стандартизация C++
∙ Лишь в 1998 году был ратифицирован международный
стандарт языка C++: ISO/IEC 14882:1998 “Standard for the
C++ Programming Language”.
∙ В 2003 году был опубликован стандарт языка ISO/IEC
14882:2003, где были исправлены выявленные ошибки и
недочёты предыдущей версии стандарта.
∙ С 2005 года началась работа над новой версией стандарта,
которая получила кодовое название C++0x.
∙ В конце концов в 2011 году стандарт был принят и
получил название C++11 ISO/IEC 14882:2011.
Совместимость C и C++
∙ Один из принципов разработки стандарта C++ — это
сохранение совместимости с C.
∙ C++ не является в строгом смысле надмножеством C.
∙ Можно писать программы на C так, чтобы они успешно
компилировались на C++.
∙ C и C++ сильно отличаются как по сложности, так и по
принятым архитектурным решениям, которые
используются в обоих языках.
Тест:
Вопрос без подвоха: в каком году впервые был стандартизован язык C++?

Ответ: 1998
В тесте могут быть несколько правильных ответов, в этом случае, для успешного прохождения, нужно отметить все правильные варианты. Выделите все верные утверждения.Данный курс об основах языка C++.

Создателем языка C++ является Бьёрн Страуструп.

Все программы на языке C успешно компилируются C++ компилятором.

Создателем языка C++ является Кен Томпсон.
Ответ:Данный курс об основах языка C++.
Создателем языка C++ является Бьёрн Страуструп.
Характеристики языка C++
∙ сложный,
∙ мультипарадигмальный,
∙ эффективный,
∙ низкоуровневый,
∙ компилируемый,
∙ статически типизированный.
Сложность
∙ Описание стандарта занимает более 1300 страниц текста.
∙ Нет никакой возможности рассказать “весь C++” в рамках
одного, пусть даже очень большого курса.
∙ В C++ программисту позволено очень многое, и это влeчёт
за собой большую ответственность.
∙ На плечи программиста ложится много дополнительной
работы:
∙ проверка корректности данных,
∙ управление памятью,
∙ обработка низкоуровневых ошибок.
Мультипарадигмальный
На C++ можно писать программы в рамках нескольких
парадигм программирования:
∙ процедурное программирование
∙ объектно-ориентированное программирование
∙ обобщённое программирование
∙ функциональное программирование
∙ генеративное программирование
Эффективный
Одна из фундаментальных идей языков C и C++ — отсутствие
неявных накладных расходов, которые присутствуют в других
более высокоуровневых языках программирования.
∙ Программист сам выбирает уровень абстракции, на
котором писать каждую отдельную часть программы.
∙ Можно реализовывать критические по производительности
участки программы максимально эффективно.
Низкоуровневый
Язык C++, как и C, позволяет работать напрямую с ресурсами
компьютера.
∙ Позволяет писать низкоуровневые системные приложения
(например, драйверы операционной системы).
∙ Неаккуратное обращение с системными ресурсами может
привести к падению программы.
В C++ отсутствует автоматическое управление памятью.
∙ Позволяет программисту получить полный контроль над
программой.
∙ Необходимость заботиться об освобождении памяти.
Статическая типизация
C++ является статически типизированным языком.
1. Каждая сущность в программе (переменная, функция и
пр.) имеет свой тип,
2. и этот тип определяется на момент компиляции.
Это нужно для того, чтобы
1. вычислить размер памяти, который будет занимать
каждая переменная в программе,
2. определить, какая функция будет вызываться в каждом
конкретном месте.
Тест: Выберите все верные утверждения из списка.
C++ ориентирован на написание эффективных приложений.
C++ не поддерживает объектно-ориентированное программирование.
C++ язык со статической типизацией.
C++ язык с динамической типизацией.
C++ не поддерживает процедурное программирование.
C++ поддерживает процедурное программирование.
Контрольные вопросы:
	1. Упрощенно память можно представить в виде массива байтов, каждый из которых имеет адрес, начиная с нуля. В зависимости от типа переменные занимают различный объем памяти.
	2. 2.1. Статический — выделение памяти до начала исполнения программы. 
	   2.2. Автоматический, также известный как «размещение на стеке», — самый основной, автоматически выделяет аргументы и локальные переменные функции.
	   2.3. Динамическая — выделение памяти из ОС по требованию приложения.
	3. Указатели представляют собой объекты, значением которых служат адреса других объектов (переменных, констант, указателей) или функций.
	4. //объявление указателя
	   /*тип данных*/  * /*имя указателя*/;
	5. Размер указателя зависит от настроек компилятора в момент компиляции программы.
	   Больше не от чего.
	6. /* Ищем имя */
	   int search(char *р[], char *name)
	   {
	   register int t;
	   for(t=0; p[t]; ++t)
	   if(!strcmp(p[t], name)) return t;
	   return -1; /* не найдено */
	   }
	7. При работе с указателями часто используется операция получения адреса (&).
	8. int main()
	   {
	   int a = 10;      
       int *pa = &a;
       int *pb = pa;
       *pa = 25;
       cout << "Value on pointer pa: " << *pa << endl;  // 25
       cout << "Value on pointer pb: " << *pb << endl;  // 25
       cout << "Value of variable a: " << a << endl;    // 25
       return 0;
	   }
	9. char cval, *рс; рс
	   int ival, *pi; pc=&cval; pi=&ival
   10. Операции с указателями Указатели в языке Си поддерживают ряд операций: присваивание,
	   получение адреса указателя, получение значения по указателю,
       некоторые арифметические операции и операции сравнения.
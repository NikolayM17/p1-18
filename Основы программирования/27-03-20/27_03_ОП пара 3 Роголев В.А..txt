27.03.2020	Роголев В.А.
П1-18 3 пара. Основы програмирования


Указатели на структуры.

// Объявляем переменную-указатель на структуры типа Date
// Эта переменная занимает место только для хранения адреса!!
    struct Date *ptrDate;

// Присвоим адрес переменной oneDay указателю
    ptrDate = &oneDay

/*
    Если мы используем имя переменной-структуы, то обращение к полям происходит
    через ".": 
Обращение: "Переменная.Поле"
    Если указатель имеет значение реального адреса переменной-структуры, 
    то обращение к атрибутам этой структуры  происходит через "->"
Обращение: "Адрес_Переменной"->"Поле"
*/
 // обращение к атрибуту year
    days += ptrDate->year * 12 * 30;
// обращение к атрибуту mount
    days += ptrDate->month * 30;
// обращение к атрибуту day
    days += ptrDate->day;



Сложные структуры

    Point coord = {7, 5}; // объект coord
    Point *directPoint;  // уаказатель на объект типа Point
    int *px, *py;       // указатели на int

    directPoint = &coord; // адрес coord присваивается directPoint
// Присваивание адресов атрибутов coord:
// Сначала получаем доступ к атрибуту,
// а затем вычисляем его адрес
    px = &(coord.x);
    py = &(coord.y);
// Присваивание адресов атрибутов через указатель directPoint:
    px = &(directPoint->x);
    py = &(directPoint->y);
Здесь различие в том что в 1 случае px и py присваивают адрес конкретного поля,
а во 2 -ом случае он использует для присвоения адрес всей структуры и из него уже берет нужное поле.